{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/brightness/index.ts"],"names":[],"mappings":";;;;;;;;;;AACA,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AAEtD;IAAmC,iCAAU;IAA7C;;IA2BA,CAAC;IA1BG;;;;;OAKG;IACH,qCAAa,GAAb,UAAc,KAAa;QACtB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAChC,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;;;OAKG;IACH,qCAAa,GAAb;QACK,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAChC,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;MAEE;IACF,uCAAe,GAAf,UAAgB,KAAc,IAAS,CAAC;IAAA,CAAC;IAC7C,oBAAC;AAAD,CA3BA,AA2BC,CA3BkC,UAAU,GA2B5C","file":"index.js","sourceRoot":"","sourcesContent":["\nimport { Brightness } from '@ionic-native/brightness';\n\nexport class BrightnesMock extends Brightness {\n    /**\n     * Sets the brightness of the display.\n     *\n     * @param {value} Floating number between 0 and 1 in which case 1 means 100% brightness and 0 means 0% brightness.\n     * @returns {Promise<any>} Returns a Promise that resolves if setting brightness was successful.\n     */\n    setBrightness(value: number): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Reads the current brightness of the device display.\n     *\n     * @returns {Promise<any>} Returns a Promise that resolves with the\n     * brightness value of the device display (floating number between 0 and 1).\n     */\n    getBrightness(): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n    * Keeps the screen on. Prevents the device from setting the screen to sleep.\n    */\n    setKeepScreenOn(value: boolean): void {};\n}\n"]}