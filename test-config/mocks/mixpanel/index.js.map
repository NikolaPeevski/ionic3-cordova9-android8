{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/mixpanel/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["import { Mixpanel, MixpanelPeople } from '@ionic-native/mixpanel';\n\nexport class MixpanelMock extends Mixpanel {\n    /**\n     *\n     * @param aliasId {string}\n     * @param originalId {string}\n     * @returns {Promise<any>}\n     */\n    alias(aliasId: string, originalId: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     *\n     * @returns {Promise<any>}\n     */\n    distinctId(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * @returns {Promise<any>}\n     */\n    flush(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     *\n     * @param distinctId {string}\n     * @returns {Promise<any>}\n     */\n    identify(distinctId: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     *\n     * @param token {string}\n     * @returns {Promise<any>}\n     */\n    init(token: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     *\n     * @param superProperties {any}\n     * @returns {Promise<any>}\n     */\n    registerSuperProperties(superProperties: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     *\n     * @returns {Promise<any>}\n     */\n    reset(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     *\n     * @param eventName {string}\n     * @returns {Promise<any>}\n     */\n    timeEvent(eventName: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     *\n     * @param eventName {string}\n     * @param eventProperties {any} optional\n     * @returns {Promise<any>}\n     */\n    track(eventName: string, eventProperties?: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n}\n/**\n * @hidden\n */\nexport class MixpanelPeopleMock extends MixpanelPeople {\n    /**\n     *\n     * @param distinctId {string}\n     * @return {Promise<any>}\n     */\n    identify(distinctId: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     *\n     * @param peopleProperties {string}\n     * @return {Promise<any>}\n     */\n    increment(peopleProperties: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     *\n     * @param pushId\n     * @return {Promise<any>}\n     */\n    setPushId(pushId: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     *\n     * @param peopleProperties\n     * @return {Promise<any>}\n     */\n    set(peopleProperties: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     *\n     * @param peopleProperties\n     * @return {Promise<any>}\n     */\n    setOnce(peopleProperties: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n}\n"]}