{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/native-geocoder/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,+BAA+B,CAAC;AAE/D;IAAwC,sCAAc;IAAtD;;IAwBA,CAAC;IAvBG;;;;;OAKG;IACH,2CAAc,GAAd,UAAe,QAAgB,EAAE,SAAiB;QAC9C,IAAI,QAAqC,CAAC;QAC1C,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,CAAC,QAAQ,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;;OAIG;IACH,2CAAc,GAAd,UAAe,aAAqB;QAChC,IAAI,QAAqC,CAAC;QAC1C,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,CAAC,QAAQ,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACN,yBAAC;AAAD,CAxBA,AAwBC,CAxBuC,cAAc,GAwBrD","file":"index.js","sourceRoot":"","sourcesContent":["import { NativeGeocoder } from '@ionic-native/native-geocoder';\n\nexport class NativeGeocoderMock extends NativeGeocoder {\n    /**\n     * Reverse geocode a given latitude and longitude to find location address\n     * @param latitude {number} The latitude\n     * @param longitude {number} The longitude\n     * @return {Promise<any>}\n     */\n    reverseGeocode(latitude: number, longitude: number): Promise<NativeGeocoderReverseResult> {\n        let response: NativeGeocoderReverseResult;\n        return new Promise((resolve, reject) => {\n            resolve(response);\n        });\n    };\n    /**\n     * Forward geocode a given address to find coordinates\n     * @param addressString {string} The address to be geocoded\n     * @return {Promise<any>}\n     */\n    forwardGeocode(addressString: string): Promise<NativeGeocoderForwardResult> {\n        let response: NativeGeocoderForwardResult;\n        return new Promise((resolve, reject) => {\n            resolve(response);\n        });\n    };\n}\n/**\n * Encapsulates format information about a reverse geocoding result.\n */\nexport interface NativeGeocoderReverseResult {\n    /**\n     * The street.\n     */\n    street: string;\n    /**\n     * The house number.\n     */\n    houseNumber: string;\n    /**\n     * The postal code.\n     */\n    postalCode: string;\n    /**\n     * The city.\n     */\n    city: string;\n    /**\n     * The district.\n     */\n    district: string;\n    /**\n     * The country name.\n     */\n    countryName: string;\n    /**\n     * The country code.\n     */\n    countryCode: string;\n}\n/**\n * Encapsulates format information about a forward geocoding result.\n */\nexport interface NativeGeocoderForwardResult {\n    /**\n     * The latitude.\n     */\n    latitude: string;\n    /**\n     * The longitude.\n     */\n    longitude: string;\n}\n"]}