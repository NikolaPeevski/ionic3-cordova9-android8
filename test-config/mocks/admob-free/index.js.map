{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/admob-free/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["import { AdMobFree } from '@ionic-native/admob-free';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport 'rxjs/add/observable/fromEvent';\n\nexport interface AdMobFreeBannerConfig {\n    /**\n     * Ad Unit ID\n     */\n    id?: string;\n    /**\n     * Receiving test ad\n     */\n    isTesting?: boolean;\n    /**\n     * Auto show ad when loaded\n     */\n    autoShow?: boolean;\n    /**\n     * Set to true, to put banner at top\n     */\n    bannerAtTop?: boolean;\n    /**\n     * Set to true, to allow banner overlap WebView\n     */\n    overlap?: boolean;\n    /**\n     * Set to true to avoid ios7 status bar overlap\n     */\n    offsetTopBar?: boolean;\n    /**\n     * Banner  size\n     */\n    size?: string;\n}\nexport interface AdMobFreeInterstitialConfig {\n    /**\n     * Ad Unit ID\n     */\n    id?: string;\n    /**\n     * Receiving test ad\n     */\n    isTesting?: boolean;\n    /**\n     * Auto show ad when loaded\n     */\n    autoShow?: boolean;\n}\nexport interface AdMobFreeRewardVideoConfig {\n    /**\n     * Ad Unit ID\n     */\n    id?: string;\n    /**\n     * Receiving test ad\n     */\n    isTesting?: boolean;\n    /**\n     * Auto show ad when loaded\n     */\n    autoShow?: boolean;\n}\n\nexport class AdMobFreeMock extends AdMobFree {\n    /**\n     * Convenience object to get event names\n     * @type {Object}\n     */\n    events: any;\n    /**\n     * Watch an event\n     * @param event {string} event name\n     * @return {Observable<any>}\n     */\n    on(event: string): Observable<any> {\n        return Observable.create((observer: Observer<any>) => {\n            observer.next('');\n            observer.complete();\n        });\n    };\n    /**\n     * Returns the AdMobFreeBanner object\n     * @type {AdMobFreeBanner}\n     */\n    banner: AdMobFreeBanner;\n    /**\n     * Returns the AdMobFreeInterstitial object\n     * @type {AdMobFreeInterstitial}\n     */\n    interstitial: AdMobFreeInterstitial;\n    /**\n     * Returns the AdMobFreeRewardVideo object\n     * @type {AdMobFreeRewardVideo}\n     */\n    rewardVideo: AdMobFreeRewardVideo;\n}\n/**\n * @hidden\n */\nexport class AdMobFreeBanner {\n    /**\n     * Update config.\n     * @param options\n     * @return {AdMobFreeBannerConfig}\n     */\n    config(options: AdMobFreeBannerConfig): AdMobFreeBannerConfig {\n        let config: AdMobFreeBannerConfig;\n        return config;\n    };\n    /**\n     * Hide the banner.\n     * @return {Promise<any>}\n     */\n    hide(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Create banner.\n     * @return {Promise<any>}\n     */\n    prepare(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Remove the banner.\n     * @return {Promise<any>}\n     */\n    remove(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Show the banner.\n     * @return {Promise<any>}\n     */\n    show(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n}\n/**\n * @hidden\n */\nexport class AdMobFreeInterstitial {\n    /**\n     * Update config.\n     * @param options\n     * @return {AdMobFreeInterstitialConfig}\n     */\n    config(options: AdMobFreeInterstitialConfig): AdMobFreeInterstitialConfig {\n        let config: AdMobFreeInterstitialConfig;\n        return config;\n    };\n    /**\n     * Check if interstitial is ready\n     * @return {Promise<any>}\n     */\n    isReady(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Prepare interstitial\n     * @return {Promise<any>}\n     */\n    prepare(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Show the interstitial\n     * @return {Promise<any>}\n     */\n    show(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n}\n/**\n * @hidden\n */\nexport class AdMobFreeRewardVideo {\n    /**\n     * Update config.\n     * @param options\n     * @return {AdMobFreeRewardVideoConfig}\n     */\n    config(options: AdMobFreeRewardVideoConfig): AdMobFreeRewardVideoConfig {\n        let config: AdMobFreeRewardVideoConfig;\n        return config;\n    };\n    /**\n     * Check if reward video is ready\n     * @return {Promise<any>}\n     */\n    isReady(): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Prepare reward video\n     * @return {Promise<any>}\n     */\n    prepare(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Show the reward video\n     * @return {Promise<any>}\n     */\n    show(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n}\n"]}