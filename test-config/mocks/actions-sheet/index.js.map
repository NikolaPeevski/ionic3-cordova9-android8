{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/actions-sheet/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AA6CzD;IAAqC,mCAAW;IAAhD;;IA4BA,CAAC;IApBG;;;;;OAKG;IACH,8BAAI,GAAJ,UAAK,OAA4B;QAC7B,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;OAGG;IACH,8BAAI,GAAJ,UAAK,OAAa;QACd,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IACL,sBAAC;AAAD,CA5BA,AA4BC,CA5BoC,WAAW,GA4B/C","file":"index.js","sourceRoot":"","sourcesContent":["import { ActionSheet } from '@ionic-native/action-sheet';\n\nexport interface ActionSheetOptions {\n    /**\n     * The labels for the buttons. Uses the index x\n     */\n    buttonLabels: string[];\n    /**\n     * The title for the actionsheet\n     */\n    title?: string;\n    /**\n     * The subtitle for the actionsheet (IOS only)\n     */\n    subtitle?: string;\n    /**\n     * Theme to be used on Android\n     */\n    androidTheme?: number;\n    /**\n     * Enable a cancel on Android\n     */\n    androidEnableCancelButton?: boolean;\n    /**\n     * Enable a cancel on Windows Phone\n     */\n    winphoneEnableCancelButton?: boolean;\n    /**\n     * Add a cancel button with text\n     */\n    addCancelButtonWithLabel?: string;\n    /**\n     * Add a destructive button with text\n     */\n    addDestructiveButtonWithLabel?: string;\n    /**\n     * On an iPad, set the X,Y position\n     */\n    position?: number[];\n    /**\n     * Choose if destructive button will be the last\n     */\n    destructiveButtonLast?: boolean;\n}\n\nexport class ActionSheetMock extends ActionSheet {\n    ANDROID_THEMES: {\n        THEME_TRADITIONAL: number;\n        THEME_HOLO_DARK: number;\n        THEME_HOLO_LIGHT: number;\n        THEME_DEVICE_DEFAULT_DARK: number;\n        THEME_DEVICE_DEFAULT_LIGHT: number;\n    };\n    /**\n     * Show a native ActionSheet component. See below for options.\n     * @param options {ActionSheetOptions} Options See table below\n     * @returns {Promise<any>} Returns a Promise that resolves with the index of the\n     *   button pressed (1 based, so 1, 2, 3, etc.)\n     */\n    show(options?: ActionSheetOptions): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Progamtically hide the native ActionSheet\n     * @returns {Promise<any>} Returns a Promise that resolves when the actionsheet is closed\n     */\n    hide(options?: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    }\n}\n"]}