{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/alipay/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAmD9C;IAAgC,8BAAM;IAAtC;;IAWA,CAAC;IAVG;;;;OAIG;IACH,wBAAG,GAAH,UAAI,KAAkB;QAClB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACN,iBAAC;AAAD,CAXA,AAWC,CAX+B,MAAM,GAWrC","file":"index.js","sourceRoot":"","sourcesContent":["import { Alipay } from '@ionic-native/alipay';\n\nexport interface AlipayOrder {\n    /**\n     * appId assigned by Alipay\n     */\n    app_id: string;\n    /**\n     * Api name.\n     * Should be: alipay.trade.app.pay\n     */\n    method: string;\n    /**\n     * Data format\n     * Default: \"JSON\"\n     */\n    format?: string;\n    /**\n     * Charset\n     * Possible values: \"UTF-8\", \"GBK\"\n     * Default: \"UTF-8\"\n     */\n    charset: string;\n    /**\n     * Sign method\n     * Default: 'RSA'\n     */\n    sign_type: string;\n    /**\n     * Sign value. Should be got from server side.\n     * Default: 'RSA'\n     */\n    sign: string;\n    /**\n     * Timestamp, formated like \"yyyy-MM-dd HH:mm:ss\", e.g. 2014-07-24 03:07:50\n     */\n    timestamp: string;\n    /**\n     * Api version. Fixed value '1.0'\n     */\n    version: string;\n    /**\n     * Notify url.\n     */\n    notify_url: string;\n    /**\n     * biz content. formated in json. see alipay doc for detail.\n     */\n    biz_content: string;\n}\n\nexport class AlipayMock extends Alipay {\n    /**\n     * Open Alipay to perform App pay\n     * @param order { AlipayOrder } alipay options\n     * @returns {Promise<any>} Returns a Promise that resolves with the success return, or rejects with an error.\n     */\n    pay(order: AlipayOrder): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n}\n"]}