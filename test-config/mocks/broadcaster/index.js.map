{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/broadcaster/index.ts"],"names":[],"mappings":";;;;;;;;;;AACA,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AACxD,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAG7C;IAAoC,kCAAW;IAA/C;;IAwBA,CAAC;IAvBG;;;;OAIG;IACH,yCAAgB,GAAhB,UAAiB,SAAiB;QAC9B,IAAI,QAAa,CAAC;QAClB,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,QAAuB;YAC7C,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxB,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;;;OAKG;IACH,wCAAe,GAAf,UAAgB,SAAiB,EAAE,SAAc;QAC7C,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACN,qBAAC;AAAD,CAxBA,AAwBC,CAxBmC,WAAW,GAwB9C","file":"index.js","sourceRoot":"","sourcesContent":["\nimport { Broadcaster } from '@ionic-native/broadcaster';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nexport class BroadcasteMock extends Broadcaster {\n    /**\n     * This function listen to an event sent from the native code\n     * @param eventName {string}\n     * @return {Observable<any>} Returns an observable to watch when an event is received\n     */\n    addEventListener(eventName: string): Observable<any> {\n        let response: any;\n        return Observable.create((observer: Observer<any>) => {\n            observer.next(response);\n            observer.complete();\n        });\n    };\n    /**\n     * This function sends data to the native code\n     * @param eventName {string}\n     * @param eventData {any}\n     * @return {Promise<any>} Returns a promise that resolves when an event is successfully fired\n     */\n    fireNativeEvent(eventName: string, eventData: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n}\n"]}