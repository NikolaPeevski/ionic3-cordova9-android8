{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/file-encryption/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,+BAA+B,CAAC;AAE/D;IAAwC,sCAAc;IAAtD;;IAuBA,CAAC;IAtBG;;;;;OAKG;IACH,oCAAO,GAAP,UAAQ,IAAY,EAAE,GAAW;QAC7B,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;;;OAKG;IACH,oCAAO,GAAP,UAAQ,IAAY,EAAE,GAAW;QAC7B,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACN,yBAAC;AAAD,CAvBA,AAuBC,CAvBuC,cAAc,GAuBrD","file":"index.js","sourceRoot":"","sourcesContent":["import { FileEncryption } from '@ionic-native/file-encryption';\n\nexport class FileEncryptionMock extends FileEncryption {\n    /**\n     * Enrcypt a file\n     * @param file {string} A string representing a local URI\n     * @param key {string} A key for the crypto operations\n     * @return {Promise<any>} Returns a promise that resolves when something happens\n     */\n    encrypt(file: string, key: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Decrypt a file\n     * @param file {string} A string representing a local URI\n     * @param key {string} A key for the crypto operations\n     * @return {Promise<any>} Returns a promise that resolves when something happens\n     */\n    decrypt(file: string, key: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n}\n"]}