{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/google-analytics/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["import { GoogleAnalytics } from '@ionic-native/google-analytics';\n\nexport class GoogleAnalyticsMock extends GoogleAnalytics {\n    /**\n     * In your 'deviceready' handler, set up your Analytics tracker.\n     * https://developers.google.com/analytics/devguides/collection/analyticsjs/\n     * @param {string}  id  Your Google Analytics Mobile App property\n     * @param {number} interval Optional dispatch period in seconds. Defaults to 30.\n     * @returns {Promise<any>}\n     */\n    startTrackerWithId(id: string, interval?: number): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Enabling Advertising Features in Google Analytics allows you to take advantage of Remarketing, Demographics & Interests reports, and more\n     * @param allow {boolean}\n     * @returns {Promise<any>}\n     */\n    setAllowIDFACollection(allow: boolean): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Set a UserId\n     * https://developers.google.com/analytics/devguides/collection/analyticsjs/user-id\n     * @param {string} id User ID\n     * @returns {Promise<any>}\n     */\n    setUserId(id: string): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Set a anonymize Ip address\n     * @param anonymize {boolean} Set to true to anonymize the IP Address\n     * @returns {Promise<any>}\n     */\n    setAnonymizeIp(anonymize: boolean): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Sets the app version\n     * @param appVersion {string} App version\n     * @returns {Promise<any>}\n     */\n    setAppVersion(appVersion: string): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Set OptOut\n     * @param optout {boolean}\n     * @returns {Promise<any>}\n     */\n    setOptOut(optout: boolean): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Enable verbose logging\n     * @returns {Promise<any>}\n     */\n    debugMode(): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Track custom metric\n     * @param key {number}\n     * @param value {any}\n     * @returns {Promise<any>}\n     */\n    trackMetric(key: number, value?: number): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Track a screen\n     * https://developers.google.com/analytics/devguides/collection/analyticsjs/screens\n     *\n     * @param title {string} Screen title\n     * @param campaignUrl {string} Campaign url for measuring referrals\n     * @param newSession {boolean} Set to true to create a new session\n     * @returns {Promise<any>}\n     */\n    trackView(title: string, campaignUrl?: string, newSession?: boolean): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Add a Custom Dimension\n     * https://developers.google.com/analytics/devguides/platform/customdimsmets\n     * @param key {number}\n     * @param value {string}\n     * @returns {Promise<any>}\n     */\n    addCustomDimension(key: number, value: string): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Track an event\n     * https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n     * @param category {string}\n     * @param action {string}\n     * @param label {string}\n     * @param value {number}\n     * @param newSession {boolean} Set to true to create a new session\n     * @returns {Promise<any>}\n     */\n    trackEvent(category: string, action: string, label?: string, value?: number, newSession?: boolean): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Track an exception\n     * @param description {string}\n     * @param fatal {boolean}\n     * @returns {Promise<any>}\n     */\n    trackException(description: string, fatal: boolean): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Track User Timing (App Speed)\n     * @param category {string}\n     * @param intervalInMilliseconds {number}\n     * @param variable {string}\n     * @param label {string}\n     * @returns {Promise<any>}\n     */\n    trackTiming(category: string, intervalInMilliseconds: number, variable: string, label: string): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Add a Transaction (Ecommerce)\n     * https://developers.google.com/analytics/devguides/collection/analyticsjs/ecommerce#addTrans\n     * @param id {string}\n     * @param affiliation {string}\n     * @param revenue {number}\n     * @param tax {number}\n     * @param shipping {number}\n     * @param currencyCode {string}\n     * @returns {Promise<any>}\n     */\n    addTransaction(id: string, affiliation: string, revenue: number, tax: number, shipping: number, currencyCode: string): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Add a Transaction Item (Ecommerce)\n     * https://developers.google.com/analytics/devguides/collection/analyticsjs/ecommerce#addItem\n     * @param {string}  id\n     * @param {string}  name\n     * @param {string}  sku\n     * @param {string}  category\n     * @param {number}  price\n     * @param {number}  quantity\n     * @param {string}  currencyCode\n     * @returns {Promise<any>}\n     */\n    addTransactionItem(id: string, name: string, sku: string, category: string, price: number, quantity: number, currencyCode: string): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Enable/disable automatic reporting of uncaught exceptions\n     * @param shouldEnable {boolean}\n     * @returns {Promise<any>}\n     */\n    enableUncaughtExceptionReporting(shouldEnable: boolean): Promise<any> {\n         return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n}\n"]}