{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/email-composer/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAa7D;IAAuC,qCAAa;IAApD;;IA+BA,CAAC;IA9BO;;;;;GAKD;IACH,uCAAW,GAAX,UAAY,GAAY;QACpB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;;;OAKG;IACH,oCAAQ,GAAR,UAAS,KAAa,EAAE,WAAmB,IAAS,CAAC;IAAA,CAAC;IACtD;;;;;;OAMG;IACH,gCAAI,GAAJ,UAAK,OAA6B,EAAE,KAAW;QAC3C,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACN,wBAAC;AAAD,CA/BA,AA+BC,CA/BsC,aAAa,GA+BnD","file":"index.js","sourceRoot":"","sourcesContent":["import { EmailComposer } from '@ionic-native/email-composer';\n\nexport interface EmailComposerOptions {\n    app?: string;\n    to?: string | Array<string>;\n    cc?: string | Array<string>;\n    bcc?: string | Array<string>;\n    attachments?: Array<any>;\n    subject?: string;\n    body?: string;\n    isHtml?: boolean;\n}\n\nexport class EmailComposerMock extends EmailComposer {\n        /**\n     * Verifies if sending emails is supported on the device.\n     *\n     * @param [app] {string} App id or uri scheme.\n     * @returns {Promise<any>} Resolves if available, rejects if not available\n     */\n    isAvailable(app?: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Adds a new mail app alias.\n     *\n     * @param alias {string} The alias name\n     * @param packageName {string} The package name\n     */\n    addAlias(alias: string, packageName: string): void {};\n    /**\n     * Displays the email composer pre-filled with data.\n     *\n     * @param options {EmailComposerOptions} Email\n     * @param [scope] {any} Scope for the promise\n     * @returns {Promise<any>} Resolves promise when the EmailComposer has been opened\n     */\n    open(options: EmailComposerOptions, scope?: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n}\n"]}